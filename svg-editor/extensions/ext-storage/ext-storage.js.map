{"version":3,"file":"ext-storage.js","sources":["../../../../src/editor/extensions/ext-storage/storageDialog.js","../../../../src/editor/extensions/ext-storage/ext-storage.js"],"sourcesContent":["/* globals svgEditor */\r\nimport storageDialogHTML from './storageDialog.html'\r\n\r\nconst template = document.createElement('template')\r\ntemplate.innerHTML = storageDialogHTML\r\n/**\r\n * @class SeStorageDialog\r\n */\r\nexport class SeStorageDialog extends HTMLElement {\r\n  /**\r\n    * @function constructor\r\n    */\r\n  constructor () {\r\n    super()\r\n    // create the shadowDom and insert the template\r\n    this._shadowRoot = this.attachShadow({ mode: 'open' })\r\n    this._shadowRoot.append(template.content.cloneNode(true))\r\n    this.$dialog = this._shadowRoot.querySelector('#dialog_box')\r\n    this.$storage = this._shadowRoot.querySelector('#js-storage')\r\n    this.$okBtn = this._shadowRoot.querySelector('#storage_ok')\r\n    this.$cancelBtn = this._shadowRoot.querySelector('#storage_cancel')\r\n    this.$storageInput = this._shadowRoot.querySelector('#se-storage-pref')\r\n    this.$rememberInput = this._shadowRoot.querySelector('#se-remember')\r\n  }\r\n\r\n  /**\r\n   * @function init\r\n   * @param {any} name\r\n   * @returns {void}\r\n   */\r\n  init (i18next) {\r\n    this.setAttribute('common-ok', i18next.t('common.ok'))\r\n    this.setAttribute('common-cancel', i18next.t('common.cancel'))\r\n    this.setAttribute('notify-editor_pref_msg', i18next.t('notification.editorPreferencesMsg'))\r\n    this.setAttribute('properties-prefs_and_content', i18next.t('properties.prefs_and_content'))\r\n    this.setAttribute('properties-prefs_only', i18next.t('properties.prefs_only'))\r\n    this.setAttribute('properties-no_prefs_or_content', i18next.t('properties.no_prefs_or_content'))\r\n    this.setAttribute('tools-remember_this_choice', i18next.t('tools.remember_this_choice'))\r\n    this.setAttribute('tools-remember_this_choice_title', i18next.t('tools.remember_this_choice_title'))\r\n  }\r\n\r\n  /**\r\n   * @function observedAttributes\r\n   * @returns {any} observed\r\n   */\r\n  static get observedAttributes () {\r\n    return ['dialog', 'storage', 'common-ok', 'common-cancel', 'notify-editor_pref_msg', 'properties-prefs_and_content', 'tools-remember_this_choice', 'tools-remember_this_choice_title', 'properties-prefs_only', 'properties-no_prefs_or_content']\r\n  }\r\n\r\n  /**\r\n   * @function attributeChangedCallback\r\n   * @param {string} name\r\n   * @param {string} oldValue\r\n   * @param {string} newValue\r\n   * @returns {void}\r\n   */\r\n  attributeChangedCallback (name, oldValue, newValue) {\r\n    let node\r\n    switch (name) {\r\n      case 'dialog':\r\n        if (newValue === 'open') {\r\n          this.$dialog.open()\r\n        } else {\r\n          this.$dialog.close()\r\n        }\r\n        break\r\n      case 'storage':\r\n        if (newValue === 'true') {\r\n          this.$storageInput.options[0].disabled = false\r\n        } else {\r\n          this.$storageInput.options[0].disabled = true\r\n        }\r\n        break\r\n      case 'common-ok':\r\n        this.$okBtn.textContent = newValue\r\n        break\r\n      case 'common-cancel':\r\n        this.$cancelBtn.textContent = newValue\r\n        break\r\n      case 'notify-editor_pref_msg':\r\n        node = this._shadowRoot.querySelector('#notificationNote')\r\n        node.textContent = newValue\r\n        break\r\n      case 'properties-prefs_and_content':\r\n        node = this._shadowRoot.querySelector('#prefsAndContent')\r\n        node.textContent = newValue\r\n        break\r\n      case 'properties-prefs_only':\r\n        node = this._shadowRoot.querySelector('#prefsOnly')\r\n        node.textContent = newValue\r\n        break\r\n      case 'properties-no_prefs_or_content':\r\n        node = this._shadowRoot.querySelector('#noPrefsOrContent')\r\n        node.textContent = newValue\r\n        break\r\n      case 'tools-remember_this_choice':\r\n        node = this._shadowRoot.querySelector('#se-remember-title')\r\n        node.prepend(newValue)\r\n        break\r\n      case 'tools-remember_this_choice_title':\r\n        node = this._shadowRoot.querySelector('#se-remember-title')\r\n        node.setAttribute('title', newValue)\r\n        break\r\n      default:\r\n        // super.attributeChangedCallback(name, oldValue, newValue);\r\n        break\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function get\r\n   * @returns {any}\r\n   */\r\n  get dialog () {\r\n    return this.getAttribute('dialog')\r\n  }\r\n\r\n  /**\r\n   * @function set\r\n   * @returns {void}\r\n   */\r\n  set dialog (value) {\r\n    this.setAttribute('dialog', value)\r\n  }\r\n\r\n  /**\r\n   * @function connectedCallback\r\n   * @returns {void}\r\n   */\r\n  connectedCallback () {\r\n    const onSubmitHandler = (e, action) => {\r\n      const triggerEvent = new CustomEvent('change',\r\n        {\r\n          detail: {\r\n            trigger: action,\r\n            select: this.$storageInput.value,\r\n            checkbox: this.$rememberInput.checked\r\n          }\r\n        })\r\n      this.dispatchEvent(triggerEvent)\r\n    }\r\n    svgEditor.$click(this.$okBtn, (evt) => onSubmitHandler(evt, 'ok'))\r\n    svgEditor.$click(this.$cancelBtn, (evt) => onSubmitHandler(evt, 'cancel'))\r\n  }\r\n}\r\n\r\n// Register\r\ncustomElements.define('se-storage-dialog', SeStorageDialog)\r\n","/**\r\n * @file ext-storage.js\r\n *\r\n * This extension allows automatic saving of the SVG canvas contents upon\r\n *  page unload (which can later be automatically retrieved upon future\r\n *  editor loads).\r\n *\r\n *  The functionality was originally part of the SVG Editor, but moved to a\r\n *  separate extension to make the setting behavior optional, and adapted\r\n *  to inform the user of its setting of local data.\r\n *\r\n * @license MIT\r\n *\r\n * @copyright 2010 Brett Zamir\r\n * @todo Revisit on whether to use `svgEditor.pref` over directly setting\r\n * `curConfig` in all extensions for a more public API (not only for `extPath`\r\n * and `imagePath`, but other currently used config in the extensions)\r\n * @todo We might provide control of storage settings through the UI besides the\r\n *   initial (or URL-forced) dialog. *\r\n */\r\nimport './storageDialog.js'\r\n\r\n/**\r\n * Expire the storage cookie.\r\n * @returns {void}\r\n */\r\nconst removeStoragePrefCookie = () => {\r\n  expireCookie('svgeditstore')\r\n}\r\n/**\r\n * Set the cookie to expire.\r\n * @param {string} cookie\r\n * @returns {void}\r\n */\r\nconst expireCookie = cookie => {\r\n  document.cookie =\r\n    encodeURIComponent(cookie) + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT'\r\n}\r\n\r\n/**\r\n * Replace `storagePrompt` parameter within URL.\r\n * @param {string} val\r\n * @returns {void}\r\n * @todo Replace the string manipulation with `searchParams.set`\r\n */\r\nconst replaceStoragePrompt = val => {\r\n  val = val ? 'storagePrompt=' + val : ''\r\n  const loc = top.location // Allow this to work with the embedded editor as well\r\n  if (loc.href.includes('storagePrompt=')) {\r\n    loc.href = loc.href.replace(/([&?])storagePrompt=[^&]*(&?)/, function (\r\n      n0,\r\n      n1,\r\n      amp\r\n    ) {\r\n      return (val ? n1 : '') + val + (!val && amp ? n1 : amp || '')\r\n    })\r\n  } else {\r\n    loc.href += (loc.href.includes('?') ? '&' : '?') + val\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'storage',\r\n  init () {\r\n    const svgEditor = this\r\n    const { svgCanvas, storage } = svgEditor\r\n\r\n    // We could empty any already-set data for users when they decline storage,\r\n    //  but it would be a risk for users who wanted to store but accidentally\r\n    // said \"no\"; instead, we'll let those who already set it, delete it themselves;\r\n    // to change, set the \"emptyStorageOnDecline\" config setting to true\r\n    // in svgedit-config-iife.js/svgedit-config-es.js.\r\n    const {\r\n      // When the code in svg-editor.js prevents local storage on load per\r\n      //  user request, we also prevent storing on unload here so as to\r\n      //  avoid third-party sites making XSRF requests or providing links\r\n      // which would cause the user's local storage not to load and then\r\n      // upon page unload (such as the user closing the window), the storage\r\n      //  would thereby be set with an empty value, erasing any of the\r\n      // user's prior work. To change this behavior so that no use of storage\r\n      // or adding of new storage takes place regardless of settings, set\r\n      // the \"noStorageOnLoad\" config setting to true in svgedit-config-*.js.\r\n      noStorageOnLoad,\r\n      forceStorage,\r\n      canvasName\r\n    } = svgEditor.configObj.curConfig\r\n\r\n    // LOAD STORAGE CONTENT IF ANY\r\n    if (\r\n      storage && // Cookies do not have enough available memory to hold large documents\r\n      (forceStorage ||\r\n        (!noStorageOnLoad &&\r\n          /(?:^|;\\s*)svgeditstore=prefsAndContent/.test(document.cookie)))\r\n    ) {\r\n      const key = 'svgedit-' + canvasName\r\n      const cached = storage.getItem(key)\r\n      if (cached) {\r\n        svgEditor.loadFromString(cached)\r\n        const name = storage.getItem(`title-${key}`) ?? 'untitled.svg'\r\n        svgEditor.topPanel.updateTitle(name)\r\n        svgEditor.layersPanel.populateLayers()\r\n      }\r\n    }\r\n\r\n    // storageDialog added to DOM\r\n    const storageBox = document.createElement('se-storage-dialog')\r\n    storageBox.setAttribute('id', 'se-storage-dialog')\r\n    svgEditor.$container.append(storageBox)\r\n    storageBox.init(svgEditor.i18next)\r\n\r\n    // manage the change in the storageDialog\r\n\r\n    storageBox.addEventListener('change', e => {\r\n      storageBox.setAttribute('dialog', 'close')\r\n      if (e?.detail?.trigger === 'ok') {\r\n        if (e?.detail?.select !== 'noPrefsOrContent') {\r\n          const storagePrompt = new URL(top.location).searchParams.get(\r\n            'storagePrompt'\r\n          )\r\n          document.cookie =\r\n            'svgeditstore=' +\r\n            encodeURIComponent(e.detail.select) +\r\n            '; expires=Fri, 31 Dec 9999 23:59:59 GMT'\r\n          if (storagePrompt === 'true' && e?.detail?.checkbox) {\r\n            replaceStoragePrompt()\r\n            return\r\n          }\r\n        } else {\r\n          removeStoragePrefCookie()\r\n          if (\r\n            svgEditor.configObj.curConfig.emptyStorageOnDecline &&\r\n            e?.detail?.checkbox\r\n          ) {\r\n            setSvgContentStorage('')\r\n            Object.keys(svgEditor.curPrefs).forEach(name => {\r\n              name = 'svg-edit-' + name\r\n              if (svgEditor.storage) {\r\n                svgEditor.storage.removeItem(name)\r\n              }\r\n              expireCookie(name)\r\n            })\r\n          }\r\n          if (e?.detail?.select && e?.detail?.checkbox) {\r\n            replaceStoragePrompt('false')\r\n            return\r\n          }\r\n        }\r\n      } else if (e?.detail?.trigger === 'cancel') {\r\n        removeStoragePrefCookie()\r\n      }\r\n      setupBeforeUnloadListener()\r\n      svgEditor.storagePromptState = 'closed'\r\n      svgEditor.updateCanvas(true)\r\n    })\r\n\r\n    /**\r\n     * Sets SVG content as a string with \"svgedit-\" and the current\r\n     *   canvas name as namespace.\r\n     * @param {string} svgString\r\n     * @returns {void}\r\n     */\r\n    const setSvgContentStorage = svgString => {\r\n      const name = `svgedit-${svgEditor.configObj.curConfig.canvasName}`\r\n      if (!svgString) {\r\n        storage.removeItem(name)\r\n        storage.removeItem(`${name}-title`)\r\n      } else {\r\n        storage.setItem(name, svgString)\r\n        storage.setItem(`title-${name}`, svgEditor.title)\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Listen for unloading: If and only if opted in by the user, set the content\r\n     *   document and preferences into storage:\r\n     * 1. Prevent save warnings (since we're automatically saving unsaved\r\n     *       content into storage)\r\n     * 2. Use localStorage to set SVG contents (potentially too large to allow in cookies)\r\n     * 3. Use localStorage (where available) or cookies to set preferences.\r\n     * @returns {void}\r\n     */\r\n    const setupBeforeUnloadListener = () => {\r\n      window.addEventListener('beforeunload', function () {\r\n        // Don't save anything unless the user opted in to storage\r\n        if (\r\n          !/(?:^|;\\s*)svgeditstore=(?:prefsAndContent|prefsOnly)/.test(\r\n            document.cookie\r\n          )\r\n        ) {\r\n          return\r\n        }\r\n        if (/(?:^|;\\s*)svgeditstore=prefsAndContent/.test(document.cookie)) {\r\n          setSvgContentStorage(svgCanvas.getSvgString())\r\n        }\r\n\r\n        svgEditor.setConfig({ no_save_warning: true }) // No need for explicit saving at all once storage is on\r\n\r\n        const { curPrefs } = svgEditor.configObj\r\n\r\n        Object.entries(curPrefs).forEach(([key, val]) => {\r\n          const store = val !== undefined\r\n          key = 'svg-edit-' + key\r\n          if (!store) {\r\n            return\r\n          }\r\n          if (storage) {\r\n            storage.setItem(key, val)\r\n          } else if (window.widget) {\r\n            window.widget.setPreferenceForKey(val, key)\r\n          } else {\r\n            val = encodeURIComponent(val)\r\n            document.cookie =\r\n              encodeURIComponent(key) +\r\n              '=' +\r\n              val +\r\n              '; expires=Fri, 31 Dec 9999 23:59:59 GMT'\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    let loaded = false\r\n    return {\r\n      name: 'storage',\r\n      callback () {\r\n        const storagePrompt = new URL(top.location).searchParams.get(\r\n          'storagePrompt'\r\n        )\r\n        // No need to run this one-time dialog again just because the user\r\n        //   changes the language\r\n        if (loaded) {\r\n          return\r\n        }\r\n        loaded = true\r\n\r\n        // Note that the following can load even if \"noStorageOnLoad\" is\r\n        //   set to false; to avoid any chance of storage, avoid this\r\n        //   extension! (and to avoid using any prior storage, set the\r\n        //   config option \"noStorageOnLoad\" to true).\r\n        if (\r\n          !forceStorage &&\r\n          // If the URL has been explicitly set to always prompt the\r\n          //  user (e.g., so one can be pointed to a URL where one\r\n          // can alter one's settings, say to prevent future storage)...\r\n          (storagePrompt === 'true' ||\r\n            // ...or...if the URL at least doesn't explicitly prevent a\r\n            //  storage prompt (as we use for users who\r\n            // don't want to set cookies at all but who don't want\r\n            // continual prompts about it)...\r\n            (storagePrompt !== 'false' &&\r\n              // ...and this user hasn't previously indicated a desire for storage\r\n              !/(?:^|;\\s*)svgeditstore=(?:prefsAndContent|prefsOnly)/.test(\r\n                document.cookie\r\n              )))\r\n          // ...then show the storage prompt.\r\n        ) {\r\n          const options = Boolean(storage)\r\n          // Open select-with-checkbox dialog\r\n          // From svg-editor.js\r\n          svgEditor.storagePromptState = 'waiting'\r\n          const $storageDialog = document.getElementById('se-storage-dialog')\r\n          $storageDialog.setAttribute('dialog', 'open')\r\n          $storageDialog.setAttribute('storage', options)\r\n        } else if (!noStorageOnLoad || forceStorage) {\r\n          setupBeforeUnloadListener()\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["template","document","createElement","innerHTML","storageDialogHTML","SeStorageDialog","HTMLElement","constructor","_shadowRoot","attachShadow","mode","append","content","cloneNode","$dialog","querySelector","$storage","$okBtn","$cancelBtn","$storageInput","$rememberInput","init","i18next","setAttribute","t","observedAttributes","attributeChangedCallback","name","oldValue","newValue","node","open","close","options","disabled","textContent","prepend","dialog","getAttribute","value","connectedCallback","onSubmitHandler","e","action","triggerEvent","CustomEvent","detail","trigger","select","checkbox","checked","dispatchEvent","svgEditor","$click","evt","customElements","define","removeStoragePrefCookie","expireCookie","cookie","encodeURIComponent","replaceStoragePrompt","val","loc","top","location","href","includes","replace","n0","n1","amp","svgCanvas","storage","noStorageOnLoad","forceStorage","canvasName","configObj","curConfig","test","key","cached","getItem","loadFromString","topPanel","updateTitle","layersPanel","populateLayers","storageBox","$container","addEventListener","storagePrompt","URL","searchParams","get","emptyStorageOnDecline","setSvgContentStorage","Object","keys","curPrefs","forEach","removeItem","setupBeforeUnloadListener","storagePromptState","updateCanvas","svgString","setItem","title","window","getSvgString","setConfig","no_save_warning","entries","_ref","store","undefined","widget","setPreferenceForKey","loaded","callback","Boolean","$storageDialog","getElementById"],"mappings":"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"}